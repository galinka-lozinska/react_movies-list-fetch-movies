{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","components/FindMovie/FindMovieTypes.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","PropTypes","arrayOf","shape","string","isRequired","func","moviesList","onSetMoviesList","useState","error","setError","inputTitle","setInputTitle","setMovie","htmlFor","type","id","value","placeholder","onFocus","onChange","event","target","onClick","fetch","then","response","json","catch","result","Response","find","film","imdbID","updateMoviesList","Title","Plot","Poster","App","data","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c017267.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { FindMovieTypes } from './FindMovieTypes';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ moviesList, onSetMoviesList }) => {\n  const [error, setError] = useState(false);\n  const [inputTitle, setInputTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n\n  const request = title => fetch(\n    ` https://www.omdbapi.com/?i=tt3896198&apikey=f6ee504e&t=${title}`,\n  )\n    .then(response => response.json())\n    .catch(() => null);\n\n  const handleFindMovie = () => {\n    request(inputTitle)\n      .then((result) => {\n        setError(result === null || result.Response === 'False');\n        setMovie(result.Response === 'False' ? null : result);\n      });\n  };\n\n  const handleAddMovie = () => {\n    if (!moviesList.find(film => film.imdbId === movie.imdbID)) {\n      const updateMoviesList = [{\n        title: movie.Title,\n        description: movie.Plot,\n        imgUrl: movie.Poster,\n        imdbId: movie.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n      }, ...moviesList];\n\n      onSetMoviesList(updateMoviesList);\n    }\n\n    setInputTitle('');\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={inputTitle}\n              placeholder=\"Enter a title to search\"\n              className={error === true ? 'input is-danger' : 'input'}\n              onFocus={() => setError(false)}\n              onChange={event => setInputTitle(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie !== null && (\n          <MovieCard\n            title={movie.Title}\n            description={movie.Plot}\n            imgUrl={movie.Poster}\n            imdbUrl={`https://www.imdb.com/title/${movie.imdbID}/`}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = FindMovieTypes;\n","import PropTypes from 'prop-types';\n\nexport const FindMovieTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string,\n      imdbUrl: PropTypes.string,\n      imdbId: PropTypes.string,\n    }),\n  ).isRequired,\n  onSetMoviesList: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          moviesList={movies}\n          onSetMoviesList={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}