{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","components/FindMovie/FindMovieTypes.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","PropTypes","func","isRequired","addMovie","useState","error","setError","inputTitle","setInputTitle","setMovie","loading","setLoading","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","onFocus","onChange","target","onClick","fetch","then","response","json","catch","result","Response","disabled","Title","Plot","Poster","imdbID","App","data","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6133a259.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { FindMovieTypes } from './FindMovieTypes';\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [error, setError] = useState(false);\n  const [inputTitle, setInputTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFindMovie = () => {\n    setLoading(true);\n    request(inputTitle)\n      .then((result) => {\n        setError(result === null || result.Response === 'False');\n        setMovie(result.Response === 'False' ? null : result);\n        setLoading(false);\n      });\n  };\n\n  const addMovieToTheList = () => {\n    addMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbId: movie.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n    });\n    setInputTitle('');\n    setError(false);\n  };\n\n  const handleSubmit = event => event.preventDefault();\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={inputTitle}\n              placeholder=\"Enter a title to search\"\n              className={error === true ? 'input is-danger' : 'input'}\n              onFocus={() => setError(false)}\n              onChange={event => setInputTitle(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={handleFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={addMovieToTheList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && (\n          !loading\n            ? (\n              <MovieCard\n                title={movie.Title}\n                description={movie.Plot}\n                imgUrl={movie.Poster}\n                imdbUrl={`https://www.imdb.com/title/${movie.imdbID}/`}\n              />\n            )\n            : (\n              <img\n                src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"\n                alt=\"loading...\"\n              />\n            ))}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = FindMovieTypes;\n","import PropTypes from 'prop-types';\n\nexport const FindMovieTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","export const request = title => fetch(\n  ` https://www.omdbapi.com/?i=tt3896198&apikey=f6ee504e&t=${title}`,\n)\n  .then(response => response.json())\n  .catch(() => null);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const handleAddMovie = (newMovie) => {\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([newMovie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}